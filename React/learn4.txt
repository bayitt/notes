Things to note about React. New React apps can be generated via the CLI by making use of the command npx create-react-app app-name. After the application has 
generated. It is important to delete everything in the src folder. Note, not the src folder, but all the contents. Then, we can add the index.css and the index.js
files. 

Then, at the top of the index.js file, we import React from 'react' and ReactDom from 'react-dom'. There are different types of components in React, the first type
of component in React subclasses React.Component. It is essentially a class component. Components take parameters called props(properties) and make use
of these props. It is actually similar to components in Angular. Whereas in Angular, we can drop in components by doing something like <app-square>. In 
React, it is something like <Square/>. 

Whereas in Angular, we have to explicitly specify props or input that will be passed in, React is very forgiving. We do not have to prior define props. 
Each class component has a render() method in which it returns the view to be displayed by the component. The content it renders has to be placed within ().

React makes use of JSX, which leverages on the full power of Javascript. Every from of Javascript expression is possible in Jsx. What the components return is
what is known as a hierachy of views. This hierachy is a lightweight description of the view, this is because it will be converted into something like
React.createElement. 

If we specify the constructor in a class component, we will need to call super(props) which will call the default constructor specified in the React.Component 
superclass. React components keep track of what is going on by making use of the state object. We can specify state in the constructor.

Controlled components refer to components whose state is defined by their parent component. In a sense, they are essentially controlled by their parent.
The state is defined or determined in the parent, and then passed in as props to the child component.

Function components refer to components that are only presentation. Essentially, they don't carry out any computation but simply return views.
Function components are simply functions and as such they do not have a render() method, they simply return views much as like in the render() method.

Seeing as it is Javascript, it makes use of className as opposed to class. The JSX equivalent of Angular's interpolation syntax is { }

To generate an optimized build of your react app, simply run npm run build

In order to render the entire React application, we make use of the ReactDOM.render() method, and in it we specify the component we want to display, much
like the <router-outlet> in Angular

When a component's state changes, the component and all its child components re-render => Change Detection in Angular

Benefits of Immutability
- Complex features become simple
- Detecting changes becomes easier
- Determining when to rerender

It seems like in React/with JSX, anytime you want to render something, put it in (). If it is a variable or prop, use {}