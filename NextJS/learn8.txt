Intercepting routes in Next JS allow you to load a route from another part of your application within the current layout. This routing paradigm can be useful when you want to display
the content of a route without the user switching to a different context. For example, when clicking a photo in a feed, you can display the photo in a modal, overlaying the the feed.
In this case, Next intercepts the /photo/123 route, masks the URL and overlays it over /feed.

Intercepting routes can be defined with the (...) convention, which is similar to relative path convention ../ but for segments.

(.) to match segments on the same level
(..) to match segments one level above
(..)(..) to match segments two levels above
(...) to match segments from the root directory

Route handlers allow you to create custom request handlers for a given route using the Web Request and Response APIs. They are the equivalent of API routes inside the pages directory.
They are defined in a route.js or route.ts file inside the app directory. They can be nested inside the app directory, similar to page.js and layout.js. But there cannot be a route.js
file at the same route segment level as page.js

Middleware allows you to run code before a request is completed. Then, based on the incoming request, yoiu can modify the response by rewriting, redirecting, modifying the request or
response headers, or responding directly. Middleware runs before cached content and routes are matched.

Use the file middleware.ts (or .js) in the root of your project to define middleware. Only one middleware.ts file is supported per project. Middleware will be invoked for every single
route in your project. Given this, its crucial to use matchers to precisely target or exclude specific routes. There are two ways to define which paths middleware will run on
- Custom matcher config
- Conditional statements

There are 4 ways of fetching data in Next JS
- On the server, with fetch
- On the server, with third party libraries
- On the client, via route handlers
- On the client, with third party libraries