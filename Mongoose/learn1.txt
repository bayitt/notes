With Mongoose, everything is derived from a schema. Compile your schema into a model. A model is a class with which we construct documents. In this case, each document will be a kitten
with properties and behaviors as declared in our schema.

Methods must be added to the schema before compiling it with mongoose.model()

Each document can be saved to the database by calling save(). The first argument to the save() method is a callback that is executed if the save fails.

If we want to access all the saved documents for a model, we can do so with await model.find()

Mongoose supports MongoDB's rich querying syntax.

Remember Leke that collections are made up of documents. They are essentially the rows.

Everything in Mongoose starts with a Schema. Each Schema maps to a MongoDB collection and defines the shape of the documents within that collection

String is shorthand for { type: String }

If we want to add additional keys later, we can make use of the Schema#add method.

The permitted SchemaTypes are
- String
- Number
- Date
- Buffer
- Boolean
- Mixed
- ObjectId
- Array
- Decimal128
- Map

Schemas not only define the structure of your documents and casting of properties, they also define document instance methods, static Model methods, compound indexes, and document
lifecycle hooks called middleware.

By default, Mongoose adds an _id property to your schemas. We can also override Mongoose's default _id with our own _id

Instances of Models are called Documents. Documents have many of their own in built methods. We may also define our own custom instance built in methods