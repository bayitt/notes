Slim is a PHP micro framework that helps you quickly write simple yet powerful web applications and APIs. At its core, Slim is a dispatcher that receives an HTTP request, invokes an 
appropriate callback routine and returns an HTTP response. 

Each Slim app route MUST return a PSR-7 response object.

Routes are defined using the application instance's get(), post(), put(), delete(), patch(), head() and options() methods. These instance methods register a route with the application's
Router object. Each routing method returns the route instance so you can immediately invoke the Route instance's methods to add middleware or assign a name.

Then, you invoke the application's run() method. The run() method begins to inwardly traverse the application's middleware stack. This is a concentric structure of middleware layers 
that receive and optionally manipulate the Environment, Request and Response objects before and after the Slim application runs. The Slim application is the innermost layer of the
concentric middleware structure.

After the run() method reaches the innermost middleware layer, it invokes the application instance and dispatches the current HTTP request to the appropriate application route object.
If a route matches the HTTP method and URI, the route's middleware and callable are invoked. If a matching route is not found, the Not Found or Not Allowed handler is invoked.

After the application dispatch process completes, each middleware layer reclaims control outwardly, beginning from the innermost layer.

In Slim, Request and Response objects are immutable value objects. They can be changed only by requesting a cloned version that has updated property values. You can request a copy of a
value object by invoking any of its PRS-7 interface methods (these methods typically have a with prefix). For example, a PSR-7 Response object has a withHeader($name, $value) method
that returns a cloned value object with the new HTTP header.

The PSR-7 interface provides these methods to transform Request and Response objects
- withProtocolVersion
- withHeader
- withAddedHeader
- withoutHeader
- withBody

The PSR-7 interface provides these methods to transform Request objects
- withMethod
- withUri
- withCookieParams
- withQueryParams
- withUploadedFiles
- withParsedBody
- withAttribute
- withoutAttribute

The PSR-7 interface provides these methods to transform Response objects
- withStatus